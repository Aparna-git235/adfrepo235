{
	"name": "df_test",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_raw_order_item",
						"type": "DatasetReference"
					},
					"name": "Orderitemsrow"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_dataflow_sink_conn",
						"type": "DatasetReference"
					},
					"name": "OrderItemTestSink",
					"rejectedDataLinkedService": {
						"referenceName": "AzureBlobStorage_linked_svc_order",
						"type": "LinkedServiceReference"
					}
				}
			],
			"transformations": [
				{
					"name": "SelectOrderItems"
				}
			],
			"scriptLines": [
				"source(output(",
				"          ORDER_ID as integer,",
				"          LINE_ITEM_ID as short,",
				"          PRODUCT_ID as short,",
				"          UNIT_PRICE as double,",
				"          QUANTITY as short",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     partitionBy('hash', 1)) ~> Orderitemsrow",
				"Orderitemsrow select(mapColumn(",
				"          each(match(name=='ORDER_ID' || name=='PRODUCT_ID')),",
				"          each(match(type=='integer'),",
				"               $$+'_INT' = $$),",
				"          UNIT_PRICE_INR = UNIT_PRICE",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectOrderItems",
				"SelectOrderItems sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['order_items.csv'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> OrderItemTestSink"
			]
		}
	}
}